<?php
/**
 * Created by PhpStorm.
 * User: yusida
 * Date: 1/29/17
 * Time: 11:19 AM
 */

namespace Modules\Villamanager\Repositories\Eloquent;


use Modules\Core\Repositories\Eloquent\EloquentBaseRepository;
use Modules\Villamanager\Events\AreaWasCreated;
use Modules\Villamanager\Events\AreaWasDeleted;
use Modules\Villamanager\Events\AreaWasUpdated;
use Modules\Villamanager\Repositories\AreaRepository;

class EloquentAreaRepository extends EloquentBaseRepository implements AreaRepository
{
    public function all()
    {
        return $this->model->all();
    }

    public function parent()
    {
        return $this->model->parent()->get();
    }


    public function create($data)
    {
        $area = parent::create($data); // TODO: Change the autogenerated stub
        event(new AreaWasCreated($area, $data));
        return $area;
    }

    public function update($model, $data)
    {
        $area = parent::update($model, $data); // TODO: Change the autogenerated stub
        event(new AreaWasUpdated($area->id,$data));
        return $area;
    }

    public function destroy($model)
    {
        event(new AreaWasDeleted($model->id, get_class($model)));
        return parent::destroy($model); // TODO: Change the autogenerated stub
    }

}